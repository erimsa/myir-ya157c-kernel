// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
* Copyright (C) MYIR 2019 - All Rights Reserved
* Author: myir
* support:support.cn@myirtech.com 
*/

/dts-v1/;

#include "stm32mp157c-ya157c.dts"

/ {
    model = "MYIR YA157C v2 www.myir-tech.com";
    compatible = "myir,stm32mp157c-ya157c-v2","st,stm32mp157c-dk2", "st,stm32mp157";
    
    sound {
        compatible = "audio-graph-card";
        label = "STM32MP1-DK";
        routing =
                "Playback" , "MCLK",
                "Capture" , "MCLK",
                "MICL" , "Mic Bias";
        dais = </*&sai2a_port &sai2b_port */&i2s2_port>;
        status = "okay";
    };

    vmmcsd_fixed: fixedregulator0 {
	compatible = "regulator-fixed";
	regulator-name = "vmmcsd_fixed";
	regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
		
	};

    vmmc: fixedregulator@1 {
        compatible = "regulator-fixed";
        regulator-name = "vmmc";
        regulator-min-microvolt = <3300000>;
        regulator-max-microvolt = <3300000>;
        startup-delay-us = <70000>;
        enable-active-high;  
    };


	regulators {
	    compatible = "simple-bus";
            #address-cells = <1>;
            #size-cells = <0>;

			
	    usb_otg1_vbus: pwr_sw2 {
                compatible = "regulator-fixed";
                reg = <1>;
                regulator-name = "usb_otg1_vbus";
                regulator-min-microvolt = <5000000>;
                regulator-max-microvolt = <5000000>;
                enable-active-high;
		};
	};

};

&i2c4 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c4_pins_a>;
	pinctrl-1 = <&i2c4_pins_sleep_a>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	status = "okay";
	/delete-property/dmas;
	/delete-property/dma-names;

	typec: stusb1600@28 {
		compatible = "st,stusb1600";
		reg = <0x28>;
		status = "okay";

		typec_con: connector {
			compatible = "usb-c-connector";
			label = "USB-C";
			power-role = "sink";
			power-opmode = "default";
		};
	};

	pmic: stpmic@33 {
		compatible = "st,stpmic1";
		reg = <0x33>;
		interrupts-extended = <&exti_pwr 55 IRQ_TYPE_EDGE_FALLING>;
		interrupt-controller;
		#interrupt-cells = <2>;
		status = "disable";
	};
    
};


&i2c2 {
	hdmi-transmitter@39 {
		compatible = "sil,sii9022";
		reg = <0x39>;
	//	iovcc-supply = <&v3v3_hdmi>;
	//	cvcc12-supply = <&v1v2_hdmi>;
		reset-gpios = <&gpioc 7 GPIO_ACTIVE_LOW>;
		interrupts = <10 IRQ_TYPE_EDGE_FALLING>;
		interrupt-parent = <&gpioa>;
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&ltdc_pins_a>;
		pinctrl-1 = <&ltdc_pins_sleep_a>;
		status = "okay";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				sii9022_in: endpoint {
					remote-endpoint = <&ltdc_ep1_out>;
				};
			};

			port@1 {
				reg = <1>;
				sii9022_tx_endpoint: endpoint {
					remote-endpoint = <&i2s2_endpoint>;
				};
			};
		};
	};


};

&i2s2 {
	clocks = <&rcc SPI2>, <&rcc SPI2_K>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
	clock-names = "pclk", "i2sclk", "x8k", "x11k";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2s2_pins_a>;
	pinctrl-1 = <&i2s2_pins_sleep_a>;
	status = "okay";

	i2s2_port: port {
		i2s2_endpoint: endpoint {
			remote-endpoint = <&sii9022_tx_endpoint>;
			format = "i2s";
			mclk-fs = <256>;
		};
	};
};


/* test HDMI*/
&ltdc {
    status = "okay";
    port {
            #address-cells = <1>;
            #size-cells = <0>;

            ltdc_ep1_out: endpoint@1 {
                          reg = <1>;
                          remote-endpoint = <&sii9022_in>;
                         };
        };
};

/* Wifi */
&sdmmc3 {
	arm,primecell-periphid = <0x10153180>;
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc3_b4_pins_a>;
	pinctrl-1 = <&sdmmc3_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc3_b4_sleep_pins_a>;
	non-removable;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&vmmcsd_fixed>;
	mmc-pwrseq = <&wifi_pwrseq>;
	#address-cells = <1>;
	#size-cells = <0>;
	keep-power-in-suspend;
	status = "okay";

	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
	};
};

/*emmc*/
&sdmmc2 {
        pinctrl-names = "default", "opendrain", "sleep";
        pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_d47_pins_a>;
        pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_d47_pins_a>;
        pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_d47_sleep_pins_a>;
        non-removable;
        no-sd;
        no-sdio;
        st,dirpol;
        st,negedge; 
        bus-width = <8>;
	    vmmc-supply = <&vmmc>;
        vqmmc-supply = <&vmmc>;
        status = "okay";
};

/*SD card*/
&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	broken-cd;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&vmmcsd_fixed>;
	status = "okay";
};

/*myir pin header
 *ANA0  ANA1 
 *PF13(ADC2_INP2) PF11(ADC1_INP2) 
 *PF14(ADC2_INP6 or ADC2_INN2) 
 *PF12(ADC1_INP6 or ADC1_INN2)
 *
 */
&adc {
	status = "okay";
	adc1: adc@0 {
		/*
		 * Type-C USB_PWR_CC1 & USB_PWR_CC2 on in18 & in19.
		 * Use at least 5 * RC time, e.g. 5 * (Rp + Rd) * C:
		 * 5 * (56 + 47kOhms) * 5pF => 2.5us.
		 * Use arbitrary margin here (e.g. 5Âµs).
		 */
		st,min-sample-time-nsecs = <5000>;
		/* ANA0, ANA1, USB Type-C CC1 & CC2 */
		st,adc-channels = <0 1 18 19>;
		status = "okay";
	};
	adc2: adc@100 {
		/* ANA0, ANA1, temp sensor, USB Type-C CC1 & CC2 */
		st,adc-channels = <0 1 12 18 19>;
		/* temperature sensor min sample time */
		st,min-sample-time-nsecs = <10000>;
		status = "okay";
	};
	adc_temp: temp {
		status = "okay";
	};
};

&vrefbuf {
	regulator-min-microvolt = <2500000>;
	regulator-max-microvolt = <2500000>;
	vdda-supply = <&vdd>;
	status = "disable";
};
